# uPaaS configuration


admin:
  # set debug to true to enable django debbuging mode, docs:
  # https://docs.djangoproject.com/en/dev/ref/settings/#debug
  debug: false
  # set log file path
  log: /tmp/upaas_admin.log
  # secret key, must be set to some random value
  # each node in single cluster must have the same value for it!
  secretkey: changeme
  # list of domains this site can server, any domain will be allowed if not
  # specified, details can be found in django docs:
  # https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
  domains:
    - "upaas.org"
    - "*.upaas.org"


mongodb:
  # mongodb database settings, use can use uri scheme:
  #uri: mongodb://localhost:27017/mydatabase')
  # or separate options for each setting:
  host: localhost
  port: 27017
  database: upaas
  # user and password is optional
  username: username
  password: password
  # if uri is set then it will be used, otherwise host, database and auth
  # options will be used


paths:
  # where to store app files during package build
  workdir: /var/upaas/workdir
  apps: /var/upaas/apps
  vassals: /etc/uwsgi-emperor/vassals


storage:
  # class implementing storage access
  handler: upaas.storage.local.LocalStorage
  settings:
    dir: /var/upaas/storage


# commands used to create empty system image
# variables:
# %workdir% - chroot directory that should be created
bootstrap:
  timelimit: 600
  # envs are optional
  env:
    LC_ALL: C
    LANG: C
  commands:
    - debootstrap --components=main,universe,multiverse,restricted `lsb_release -sc` %workdir%
  # maximum number of days to keep bootstraped os image,
  # if image is older we will created new one
  maxage: 7
  # packages required in base os image
  packages:
    - python-software-properties
    - build-essential


commands:
  # how long any action command can take to execute
  timelimit: 600
  # how to install or remove package
  install:
    env:
      DEBIAN_FRONTEND: noninteractive
      LC_ALL: C
      LANG: C
    cmd: apt-get install --no-install-recommends -y %package%
  uninstall:
    env:
      DEBIAN_FRONTEND: noninteractive
      LC_ALL: C
      LANG: C
    cmd: apt-get remove -y %package%


apps:
  # name or uid of user that will be used to run app inside namespace
  uid: www-data
  # name or gid of group that will be used to run app inside namespace
  gid: www-data
  # app directory inside the chroot
  home: /home/app
  # automatic domain for apps
  domain: upaas.local
  # minimal port for app sockets
  tcp:
    # port range for app sockets, all ports from this range must be free
    port_min: 2001
    port_max: 7999


defaults:
  budget:
    apps_count: 0
    worker_limit: 16
    memory_limit: 512


interpreters:

  env:
    LC_ALL: C
    LANG: C
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  uwsgi:
    # base template path
    template: base.ini

  actions:
    setup:
      system:
        - echo "#!/bin/sh\n" > /usr/sbin/policy-rc.d
        - echo "exit 101\n" >> /usr/sbin/policy-rc.d
        - chmod 755 /usr/sbin/policy-rc.d
        - apt-add-repository -y ppa:brightbox/ruby-ng
        - apt-get update
        - apt-get dist-upgrade -y
      finalize:
        - apt-get clean

  ruby:
    any:
      env:
        RAILS_ENV: production
      uwsgi:
        template: interpreters/ruby.ini
      packages:
        - ruby-switch

      actions:
        setup:
          main:
            - gem install bundler
            - bundle install --deployment --without test development
    1.8.7:
      uwsgi:
        plugin: rack_ruby18
      packages:
        - ruby1.8
        - ruby1.8-dev
        - rubygems
      actions:
        setup:
          interpreter:
            - ruby-switch --set ruby1.8
            - ruby -v
    1.9.3:
      uwsgi:
        plugin: rack_ruby191
      packages:
        - ruby1.9.1
        - ruby1.9.1-dev
      actions:
        setup:
          interpreter:
            - ruby-switch --set ruby1.9.1
            - ruby -v
    2.0.0:
      uwsgi:
        plugin: rack_ruby20
      packages:
        - ruby2.0
        - ruby2.0-dev
      actions:
        setup:
          interpreter:
            - ruby-switch --set ruby2.0
            - ruby -v

  python:

    any:
      uwsgi:
        template: interpreters/python.ini

    2.7:
      uwsgi:
        plugin: python27
      packages:
        - python2.7
        - python2.7-dev
        - python-pip
      actions:
        setup:
          main:
            - pip install -qMU -r requirements.txt
    3.2:
      uwsgi:
        plugin: python32
      packages:
        - python3.2
        - python3.2-dev
        - python3-pip
      actions:
        setup:
          main:
            - pip-3.2 install -qMU -r requirements.txt

  php:
    5.5:
      uwsgi:
        template: interpreters/php.ini
        plugin: php
      packages:
        - php5-dev
        - php-pear
