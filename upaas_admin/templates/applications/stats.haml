- extends 'applications/base.html'


- load i18n
- load tz
- load compressed


- block app_content

  .row
    .btn-toolbar
      .btn-group
        %button.btn.btn-default.dropdown-toggle{'type':'button', 'data-toggle':'dropdown'}
          %span#upaas-metrics-type-label
            - trans "Workers count"
          %span.caret
        %ul.dropdown-menu.pull-right{'role':'menu'}
          %li
            %a{'id':'metric-requests', 'href':'#'}
              - trans "Requests"
          %li
            %a{'id':'metric-avg_rt', 'href':'#'}
              - trans "Response time"
          %li
            %a{'id':'metric-workers', 'href':'#'}
              - trans "Workers count"
          %li
            %a{'id':'metric-rss', 'href':'#'}
              - trans "Memory usage"
          %li
            %a{'id':'metric-tx', 'href':'#'}
              - trans "Bytes sent"
      %button#upaas-stats-dates.btn.btn-default{'type':'button'}
        %span#upaas-stats-dates-label
          - trans "Select time range"
        %span.caret
      %button#upaas-stats-refresh.btn.btn-primary.pull-right{'type':'button'}
        %i.fa.fa-refresh
        - trans "Refresh"

  .row
    %p

  .row
    #graph-placeholder
      %img#graph


- block js_bottom
  = block.super

  - compressed_js 'graphite'

  - compressed_css 'daterangepicker'
  - compressed_js 'daterangepicker'

  :javascript
    var default_start = moment().subtract('hours', 2);
    var default_end = moment();

    var metric = 'metric-workers';
    var start = default_start;
    var end = default_end;

    var graph_options = {
      'metric-workers': {
        target: [
            "alias(stacked({{ carbon_root }}.*.{{ app.id }}.core.busy_workers), '{% trans "busy" %}')",
            "alias(stacked({{ carbon_root }}.*.{{ app.id }}.core.idle_workers), '{% trans "idle" %}')",
        ],
        title: "{% trans "Workers count" %}",
        areaMode: "stacked",
        hideLegend: false,
        lineMode: "staircase",
        vtitle: "{% trans "count" %}"
      },
      'metric-avg_rt': {
        target: [
            "{{ carbon_root }}.*.{{ app.id }}.worker.0.avg_response_time",
        ],
        title: "{% trans "Response time" %}",
        hideLegend: true,
        lineMode: "staircase",
        vtitle: "{% trans "milliseconds" %}"
      },
      'metric-requests': {
        target: [
            "summarize(nonNegativeDerivative({{ carbon_root }}.*.{{ app.id }}.worker.0.requests), '1sec')",
        ],
        title: "{% trans "Requests" %}",
        areaMode: "stacked",
        hideLegend: true,
        lineMode: "staircase",
        vtitle: "{% trans "number per second" %}"
      },
      'metric-rss': {
        target: [
            "stacked({{ carbon_root }}.*.{{ app.id }}.core.total_rss)",
        ],
        title: "{% trans "Memory usage" %}",
        areaMode: "stacked",
        hideLegend: true,
        lineMode: "staircase",
        vtitle: "{% trans "bytes" %}",
        yUnitSystem: "binary"
      },
      'metric-tx': {
        target: [
            "stacked(summarize(nonNegativeDerivative({{ carbon_root }}.*.{{ app.id }}.core.total_tx), '1sec'))",
        ],
        title: "{% trans "Bytes sent" %}",
        areaMode: "stacked",
        hideLegend: true,
        lineMode: "staircase",
        vtitle: "{% trans "bytes per second" %}",
        yUnitSystem: "binary"
      }
    }

    function render() {
      var options = graph_options[metric];
      $.extend(options, {
        from: moment(start).format("HH:mm_YYYYMMDD"),
        until: moment(end).format("HH:mm_YYYYMMDD"),
        width: $('#graph-placeholder').width(),
        url: "{{ render_url }}",
        tz: "{{ TIME_ZONE }}",
        bgcolor: window.UPAAS.rgb_to_hex($('#graph-placeholder').css('background-color'))
      });
      $("#graph").graphite(options);
    }

    $(document).ready(function(){
      var separator = ' - ';
      var date_format = 'YYYY/MM/DD H:mm';

      $('#upaas-stats-dates').daterangepicker({
        applyClass: 'btn-primary',
        showDropdowns: true,
        opens: 'left',
        separator: separator,

        startDate: default_start,
        endDate: default_end,
        minDate: '{{ app.date_created|date:"c" }}',
        maxDate: moment(),

        timePicker: true,
        timePickerIncrement: 10,
        timePicker12Hour: false,
        format: date_format,

        ranges: {
           '{% trans "Last 2 hours" %}': [default_start, default_end],
           '{% trans "Last 12 hours" %}': [moment().subtract('hours', 12), moment()],
           '{% trans "Today" %}': [moment().startOf('day'), moment()],
           '{% trans "Yesterday" %}': [moment().subtract('days', 1).startOf('day'), moment().subtract('days', 1).endOf('day')],
           '{% trans "Last 7 Days" %}': [moment().subtract('days', 6), moment()],
         },

        locale: {
            applyLabel: '{% trans "Apply" %}',
            cancelLabel: '{% trans "Cancel" %}',
            fromLabel: '{% trans "From" %}',
            toLabel: '{% trans "To" %}',
            customRangeLabel: '{% trans "Custom Range" %}',
        }

      }, function(date_from, date_until) {
        start = date_from;
        end = date_until;
        $('#upaas-stats-dates-label').html(start.format(date_format) + separator + end.format(date_format));
        render();
      });

      $(".dropdown-menu li a").click(function(){
        metric = $(this).attr('id');
        $('#upaas-metrics-type-label').html($(this).text());
        render();
      });

      $("#upaas-stats-refresh").click(render);

      render();

    });
