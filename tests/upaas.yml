# uPaaS configuration


admin:
  # verbosity level for all logged messages (debug, info, warning, error)
  loglevel: debug
  # set debug to true to enable django debbuging mode, docs:
  # https://docs.djangoproject.com/en/dev/ref/settings/#debug
  debug: false
  # secret key, must be set to some random value
  # each node in single cluster must have the same value for it!
  secretkey: changeme
  # list of domains this site can serve, any domain will be allowed if not
  # specified, details can be found in django docs:
  # https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
  domains:
    - "www.u-paas.org"
    - "u-paas.org"


mongodb:
  # mongodb database settings, use can use uri scheme:
  #uri: mongodb://localhost:27017/mydatabase')
  # or separate options for each setting:
  host: localhost
  database: upaas-test


paths:
  # where to store app files during package build
  workdir: /tmp
  apps: /tmp
  vassals: /tmp


storage:
  # class implementing storage access
  handler: upaas.storage.mongodb.MongoDBStorage


# commands used to create empty system image
# variables:
# %workdir% - chroot directory that should be created
bootstrap:
  timelimit: 600
  # envs are optional
  env:
    LC_ALL: C
    LANG: C
  commands:
    - mkdir -p %workdir%/home
  # maximum number of days to keep bootstraped os image,
  # if image is older we will created new one
  maxage: 7
  # packages required in base os image
  packages:
    - python-software-properties
    - build-essential


commands:
  # how long any action command can take to execute
  timelimit: 600
  # how to install or remove package
  install:
    env:
      DEBIAN_FRONTEND: noninteractive
      LC_ALL: C
      LANG: C
    cmd: echo apt-get install --no-install-recommends -y %package%
  uninstall:
    env:
      DEBIAN_FRONTEND: noninteractive
      LC_ALL: C
      LANG: C
    cmd: echo apt-get remove -y %package%


apps:
  # name or uid of user that will be used to run app inside namespace
  uid: www-data
  # name or gid of group that will be used to run app inside namespace
  gid: www-data
  # app directory inside the chroot
  home: /home/app
  # automatic domain for apps
  domains:
    system: upaas.local
  # minimal port for app sockets
  tcp:
    # port range for app sockets, all ports from this range must be free
    port_min: 2001
    port_max: 7999
  uwsgi:
    # list of uWSGI options allowed to be passed in metadata
    # values python regexp
    safe_options:
      - "^check-static"
      - "^static-"
      - "^harakiri"
      - "^enable-threads$"
      - "^(worker-|)reload-mercy$"
      - "^max-requests$"
      - "^(min|max)-worker-lifetime$"
      - "^upload-progress$"
      - "^lazy"
      - "^route"
      - "^(response|final|error)-route$"

  graphite:
    carbon:
      - 127.0.0.1:2003
    render_url: http://localhost/render/


defaults:
  limits:
    running_apps: 0
    workers: 16
    memory_per_worker: 128
    packages_per_app: 2
    max_log_size: 3


interpreters:

  env:
    LC_ALL: C
    LANG: C
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  uwsgi:
    # base template path
    template: upaas_admin/var/etc/uwsgi/base.ini

  actions:
    setup:
      system:
        - echo "interpreteres/actions/setup/system"
      finalize:
        - echo "interpreteres/actions/setup/finalize"

  ruby:
    any:
      env:
        RAILS_ENV: production
        RACK_ENV: production
      uwsgi:
        template: upaas_admin/var/etc/uwsgi/templates/ruby.ini
      packages:
        - ruby-switch

    "1.8.7":
      uwsgi:
        plugin: rack_ruby18
      packages:
        - ruby1.8
        - ruby1.8-dev
        - rubygems
      actions:
        setup:
          interpreter:
            - echo "interpreteres/ruby/1.8.7/actions/setup/interpreter"
    "1.9.3":
      uwsgi:
        plugin: rack_ruby191
      packages:
        - ruby1.9.1
        - ruby1.9.1-dev
      actions:
        setup:
          interpreter:
            - echo "interpreteres/ruby/1.9.3/actions/setup/interpreter"
    "2.0":
      uwsgi:
        plugin: rack_ruby20
      packages:
        - ruby2.0
        - ruby2.0-dev
      actions:
        setup:
          interpreter:
            - echo "interpreteres/ruby/2.0.0/actions/setup/interpreter"

  python:

    any:
      uwsgi:
        template: upaas_admin/var/etc/uwsgi/templates/python.ini
      settings:
        module: app

    "2.7":
      uwsgi:
        plugin: python27
      packages:
        - python2.7
        - python2.7-dev
        - python-pip
      actions:
        setup:
          main:
            - echo "interpreteres/python/2.7/actions/setup/main"
    "3.2":
      uwsgi:
        plugin: python32
      packages:
        - python3.2
        - python3.2-dev
        - python3-pip
      actions:
        setup:
          main:
            - echo "interpreteres/python/3.2/actions/setup/main"

  php:

    any:
      uwsgi:
        template: upaas_admin/var/etc/uwsgi/templates/php.ini
      setup:
        actions:
          interpreter:
            - echo "interpreteres/php/any/actions/set/interpreter"

    "5.5":
      uwsgi:
        plugin: php
      packages:
        - php5-dev
        - php5-cgi
        - php-pear
